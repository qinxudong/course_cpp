////
//// Created by qin on 18-12-3.
////
//
//#include <iostream>
//using namespace std;
//
//
//class C
//{
//public:
//    int a;
//    float f = 12.1f;                        // 这里直接初始化变量也没报错
//    int aa;
//
//    C(): a(12), f(12.12f)                   // 初始化列表
//    {
////        a = 13;
//    }
//
//    C(int a, float f): a(a), f(f)           // 通过传参初始化列表
//    {
////        a = 13;
//    }
//
//    C(int a0): aa(a0), a(aa)                // 测试初始化顺序
//    {}
//
//    void show()
//    {
//        cout << a << ' ' << f << endl;
//    }
//
//    void show_()
//    {
//        cout << a << ' ' << aa << ' ' << f << endl;
//    }
//};
//
//int main()
//{
//    C c;
//    c.show();
//
//    C cc(14, 14.14f);
//    cc.show();
//
//    C ccc(12);
//    ccc.show_();
//
//    return 0;
//}
//
//
///*
// * 1.初始化列表的作用是对类中的数据成员进行初始化，格式是：constructor(): variable(value), ...。
// * 2.类实例化对象时，先初始化，再执行构造函数。
// * 3.可以通过构造函数传参来初始化数据成员。
// * 4.数据成员的初始化顺序与初始化列表中的顺序无关，而是按照其在类中声明的顺序来的。
// * 5.对数据成员的初始化可以通过1）初始化列表；2）构造函数中赋值；3）在类中声明时直接初始化(课中说不行，测试可行)。
// */